import cv2
import numpy as np

def get_object_position(frame, lower_color, upper_color):
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    mask = cv2.inRange(hsv, lower_color, upper_color)
    
    contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    if contours:
        largest_contour = max(contours, key=cv2.contourArea)
        x, y, w, h = cv2.boundingRect(largest_contour)
        cx, cy = x + w // 2, y + h // 2
        return cx, cy, mask
    
    return None, None, mask

def main():
    cap = cv2.VideoCapture(0)
    
    lower_red = np.array([0, 120, 70])  # Lower bound for red in HSV
    upper_red = np.array([10, 255, 255])  # Upper bound for red in HSV
    
    while True:
        ret, frame = cap.read()
        if not ret:
            break
        
        cx, cy, mask = get_object_position(frame, lower_red, upper_red)
        
        if cx is not None and cy is not None:
            cv2.circle(frame, (cx, cy), 5, (0, 255, 0), -1)
            cv2.putText(frame, f"({cx}, {cy})", (cx+10, cy-10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)
        
        cv2.imshow("Frame", frame)
        cv2.imshow("Mask", mask)
        
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
    
    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    main()
